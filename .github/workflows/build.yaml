name: build

on:
  push:
    branches:
      - master
  pull_request:

env:
  GO_VERSION: "1.16"
  REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build binary
        run: make build

  test:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run tests
        run: make test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.out

  validate:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Verify dependencies
        run: make verify

      - name: Check formatting of go files
        run: make goimports checkfmt

      - name: Run linters
        run: make golangci lint

  docker:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker
        uses: docker/login-action@v1
        if: env.REGISTRY_USERNAME != ''
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build 'dev' Docker image
        if: "env.REGISTRY_USERNAME != '' && !contains(github.ref, 'refs/heads/master')"
        run: make docker
        env:
          DOCKER_TAG: ${{ github.sha }}

      - name: Build and push 'edge' Docker image
        if: env.REGISTRY_USERNAME != '' && contains(github.ref, 'refs/heads/master')
        run: make docker push
        env:
          DOCKER_TAG: edge
